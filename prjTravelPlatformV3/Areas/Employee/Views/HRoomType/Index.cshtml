@{
    ViewData["Title"] = "房型管理";
}
@section Styles{
    <link href="~/lib/datatables/css/jquery.datatables.css" rel="stylesheet" />
    <style>
        thead {
            background-color: #5CADAD;
            color: black;
        }

        .pageTab {
            display: flex;
            border-radius: 100px;
            justify-content: center;
            margin: 20px 0 35px 0;
        }

        .pageTab_item {
            width: 100%;
            max-width: 170px;
            overflow: hidden;
            background-color: #eef1f2;
        }

            .pageTab_item:first-child {
                border-top-left-radius: 100px;
                border-bottom-left-radius: 100px;
            }

            .pageTab_item:last-child {
                border-top-right-radius: 100px;
                border-bottom-right-radius: 100px;
            }

            .pageTab_item .pageTab_link.is-current {
                pointer-events: none;
                color: #fff;
                background-color: #005bac;
            }

        .pageTab_link {
            border: none;
            line-height: 1.5rem;
            transition: background-color .2s ease-out,color .2s ease-out;
            border-radius: 100px;
            padding: 14px 20px;
            width: 100%;
        }

            .pageTab_link:hover {
                background-color: #dee4e6
            }

        .tabContent {
            display: none;
            margin: 20px 50px 25px 50px;
        }

            .tabContent.active {
                display: block;
            }
    </style>

}
<h3>房型管理</h3>

<button id="t1" type="button" class="btn btn-info" data-bs-toggle="modal" data-bs-target="#hotelPartial" onclick="getEditPartial(0)"><i class="fa-solid fa-circle-plus" style="font-size:0.8rem"></i> 新增</button>

<table class="table" id="tbRoomType">
    <thead>
        <tr>
            <th style="display: none">roomId</th>
            <th>房型名稱</th>
            <th>床型</th>
            <th>床數</th>
            <th>可容納人數</th>
            <th>定價</th>
            <th>房間數量</th>
            <th style="width:50px">功能</th>
        </tr>
    </thead>
</table>

<!--Modal-->
<div class="modal fade" id="hotelPartial" tabindex=" -1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-xl">
        <div class="modal-content">
            <div id="edit-modal">
                <!--引入 ModalPartial-->
            </div>
        </div>
    </div>
</div>

@section Scripts{
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script src="~/lib/datatables/js/jquery.datatables.min.js"></script>
    <script src="//cdn.datatables.net/fixedheader/3.4.0/js/dataTables.fixedHeader.min.js"></script>
    <script>
        const editModal = document.getElementById("edit-modal");
        const createModal = document.getElementById("create-modal");
        const btnSave = document.getElementById("btnSave");

        const loadRoomTypeData = () => {
            $("#tbRoomType").dataTable({
                autoWidth: false,
                ajax: {
                    type: 'GET',
                    url: "/api/RoomType/GetRoomTypeAll",
                    dataSrc: function (json) { return json; }
                },
                columns: [
                    { "data": "fRoomTypeId", "visible": false },
                    { "data": "房型名稱" },
                    { "data": "床型" },
                    { "data": "床數" },
                    { "data": "可容納人數" },
                    { "data": "定價" },
                    { "data": "房間數量" },
                    {
                        data: null,
                        title: "功能",
                        render: function (data, type, row) {
                            return `<button id="t1" type = "button" class="btn btn-primary btn-sm me-1" data-bs-toggle="modal" data-bs-target="#hotelPartial" onclick="getEditPartial(${row.fRoomTypeId})"><i class="fa-solid fa-pen-to-square" style="font-size:0.8rem"></i> 編輯</button> ` +
                                '<button type="button" class="btn btn-danger btn-sm"><i class="fa-solid fa-trash" style="font-size:0.8rem"></i> 刪除</button>'
                        }
                    },
                ],

                language: {
                    url: 'https://cdn.datatables.net/plug-ins/1.13.7/i18n/zh-HANT.json'
                },


            })
        }

        const getEditPartial = async (id) => {
            const response = await fetch(`@Url.Content("~/Employee/HRoomType/GetPartial")?id=${id}`);
            const data = await response.text();
            editModal.innerHTML = data
        }


        const sendFetchRequest = async (actionName) => {
            //抓取目前的form id
            const formId = document.querySelector("form").getAttribute('id');
            //目前的form id的DOM元素
            const formIdDOM = document.getElementById(`${formId}`)
            //新增form data物件
            const formData = new FormData(formIdDOM)

            const add = document.querySelectorAll('[data-roomNum="roomNum"]');
            add.forEach(element => {
                formData.append('roomNumberList', element.textContent);
            });
            
            //取得防偽標籤
            const token = document.querySelector('input[name="__RequestVerificationToken"]').value;
            try {
                const res = await fetch(`@Url.Content("~/api/RoomType/")` + actionName, {
                    headers: {
                        'RequestVerificationToken': token
                    },
                    body: formData,
                    method: 'POST'
                });
                if (!res.ok) {
                    throw new Error(`${res.status}`)
                }
                const data = await res.json();

                if (data.success) {
                    //顯示訊息
                    Swal.fire({
                        title: "Success",
                        text: data.message,
                        icon: "success"
                    });

                    //關閉modal
                    var myModal = bootstrap.Modal.getInstance(hotelPartial);

                    myModal.hide();   
                    //刷新datatable
                    $('#tbHotel').DataTable().ajax.reload();
                } else {
                    //依自己的form增加需要驗證的欄位(驗證規則在viewModel中)
                    const errorHotelName = document.querySelector(`[data-valmsg-for="HotelName"]`);
                    const errorPhone = document.querySelector(`[data-valmsg-for="Phone"]`);
                    if (errorHotelName) {
                        errorHotelName.textContent = data.errors.HotelName[0];
                    }
                    if (errorPhone) {
                        errorPhone.textContent = data.errors.Phone[0];
                    }
                }
            } catch (error) {
                Swal.fire({
                    title: "error",
                    text: error.message,
                    icon: "error"
                });
            }
        }

        const uploadPic = () => {
            $("#file").click();
        }

        const onPictureChange = (event) => {

            const files = event.target.files;
            const preview = document.getElementById("preview");
            const noPhoto = document.getElementById("noPhoto");
            const maxFiles = 8; // 最大數量限制

            // 檢查是否超過限制
            if (files.length > maxFiles) {
                alert(`最多只能上傳 ${maxFiles} 張圖片`);
                event.target.value = '';
                return;
            }
            if (files) {
                var allowType = "image.*";
                preview.innerHTML = "";
                for (let i = 0; i < files.length; i++) {
                    // 檢查格式
                    if (!files[i].type.match(allowType)) {
                        alert("不支援上傳的格式!");
                        continue;
                    }
                    // 創建 FileReader
                    var reader = new FileReader();
                    reader.onload = function (event) {
                        const img = document.createElement('img');
                        img.src = event.target.result;
                        img.setAttribute("class", "col-4 img-fluid p-1 rounded-3");
                        preview.appendChild(img);
                    };
                    reader.readAsDataURL(files[i]);
                }
            }
        }

        const openTab = (event, tabName) => {

            // 隱藏所有選項卡內容
            tabcontent = document.getElementsByClassName("tabContent");
            for (i = 0; i < tabcontent.length; i++) {
                tabcontent[i].classList.remove("active");
            }

            // 取消所有選項卡按鈕的啟用狀態
            tabLink = document.getElementsByClassName("pageTab_link");
            for (i = 0; i < tabLink.length; i++) {
                tabLink[i].classList.remove("is-current");
            }

            // 顯示特定選項卡內容，並將其對應的按鈕設置為啟用狀態
            document.getElementById(tabName).classList.add("active");
            event.currentTarget.className += " is-current";
        }


        const idList = [];

        const imgSelected = (id, event) => {
            if (event.target.getAttribute('data-imgName') === "noPhoto.jpg") {
                return;
            }
            // 獲取刪除按鈕元素
            const delBtn = document.getElementById("delBtn");
            // 如果選擇列表中包含當前圖片的ID
            if (idList.includes(id)) {
                // 從選擇列表中移除當前圖片的ID
                const index = idList.indexOf(id);
                idList.splice(index, 1);
                // 取消應用濾鏡效果
                event.target.style.filter = "";
                // 如果選擇列表為空，則禁用刪除按鈕
                if (idList.length === 0) {
                    delBtn.setAttribute("disabled", true);
                }
                return;
            }
            // 否則，啟用刪除按鈕
            delBtn.removeAttribute("disabled");
            // 應用濾鏡效果，使圖片變暗
            event.target.style.filter = "brightness(60%)";
            // 將圖片的ID添加到選擇列表中
            idList.push(id);
        }

        const deletePhotoClick = async (roomTypeId) => {
            const photoNum = idList.length;
            // Swal.fire({
            //     title: `確定要刪除這${photoNum}張圖片`,
            //     showDenyButton: true,
            //     confirmButtonText: "確定",
            //     denyButtonText: `取消`
            // }).then((result) => {
            //     /* Read more about isConfirmed, isDenied below */
            //     if (result.isConfirmed) {
            //         Swal.fire("刪除成功", "", "success");
            //     }
            // });

            const yes = confirm(`確定要刪除圖片，共${photoNum}張?`);
            if (yes) {
                try {
                    const res = await fetch("@Url.Content("~/api/RoomType/DeletePhoto")", {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify(idList)
                    });
                    if (!res.ok) {
                        throw new Error(`${res.status}`)
                    }
                    const data = await res.json();
                    Swal.fire({
                        title: "Success",
                        text: data.message,
                        icon: "success"
                    });

                    await getEditPartial(roomTypeId);

                    const image = document.getElementById("image");
                    const imgTab = document.getElementById("img-tab");
                    const info = document.getElementById("info");
                    const infoTab = document.getElementById("info-tab");

                    infoTab.classList.remove("is-current");
                    info.classList.remove("active");
                    imgTab.classList.add("is-current");
                    image.classList.add("active");

                } catch (error) {
                    alert(error.message);
                }
            }

        }

        
        const addRoomClick = (name, event) => {
            const ipAddRoom = document.getElementById("ipAddRoom");
            const tbRoom = document.getElementById("tbRoom");
            const tBody = document.getElementById("tBody");

            
            tBody.innerHTML +=
                `<tr>
                    <td class="ps-4 p-3">
                        <p class="text-secondary mb-0 font-weight-bold">${name}</p>
                    </td>
                    <td class="ps-4 p-3">
                                <p class="text-secondary mb-0 font-weight-bold" data-roomNum="roomNum" name="roomNumberList">${ipAddRoom.value}</p>
                    </td>
                    <td class="align-middle">
                        <a href="javascript:;" class="text-secondary font-weight-bold " data-toggle="tooltip" data-original-title="Edit user">
                            刪除
                        </a>
                    </td>
                </tr>`;
            ipAddRoom.value = ""
        };

        document.addEventListener('DOMContentLoaded', function () {
            loadRoomTypeData();
        });
    </script>
}

