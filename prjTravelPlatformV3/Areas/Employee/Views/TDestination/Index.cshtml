@model IEnumerable<prjTravelPlatformV3.Models.TdestinationPhoto>

@{
	ViewData["Title"] = "景點管理";
}

@section Styles {
	<link href="~/lib/datatables/css/jquery.datatables.css" rel="stylesheet" />
	<style>
		thead {
			background-color: lightslategrey;
			color: black;
		}

		.hover-highlight {
			background-color: #f0f0f0 !important;
		}

		h3:focus {
			outline: none;
		}
	</style>
}

<h3>景點管理</h3>
<button id="t1" type="button" class="btn btn-info" data-bs-toggle="modal" data-bs-target="#destionationPartial" onclick="getEditPartial(0)"><i class="fa-solid fa-circle-plus" style="font-size:0.8rem"></i> 新增</button>
<button type="button" class="btn btn-info" id="btnSave"><i class="fa-solid fa-circle-plus" style="font-size:0.8rem"></i> 匯入資料</button>
<input style="height:40px" type="file" id="uploadBtn" accept=".xlsx" />
<table class="table" id="tbdes">
	<thead>
		<tr>
			<th style="display: none">id</th>
			<th>狀態</th>
			<th>景點名稱</th>
			<th>景點類型</th>
			<th>價格</th>
			<th>門票數量</th>
			<th>景點地區</th>
			<th>優先度</th>
			<th style="width:50px">功能</th>
		</tr>
	</thead>
</table>
<figure style="border:80px">
	<h3 tabindex="999" id="myHeading">景點敘述</h3>
	<figcaption id="destionationcontext" style="width:100%">依據左方列表點選變更</figcaption>
	<h3>景點圖片</h3>
	<div id="destionationimg">
	</div>
</figure>
<!--Modal-->
<div class="modal fade" id="destionationPartial" tabindex=" -1" aria-labelledby="exampleModalLabel" aria-hidden="true">
	<div class="modal-dialog modal-xl">
		<div class="modal-content">
			<div id="edit-modal">
				<!--引入 ModalPartial-->
			</div>
		</div>
	</div>
</div>

@section Scripts {
	@{
		await Html.RenderPartialAsync("_ValidationScriptsPartial");
	}
	<script src="~/lib/datatables/js/jquery.datatables.min.js"></script>
	<script src="//cdn.datatables.net/fixedheader/3.4.0/js/dataTables.fixedHeader.min.js"></script>
	<script>
		const loadDestionation = () => {
			$("#tbdes").dataTable({
				autoWidth: false,
				ajax: {
					type: 'GET',
					url: "/api/TApi/GetAllDestionation",
					dataSrc: function (json) { return json; }
				},
				columns: [
					{ "data": "fDestinationId", "visible": false },
					{ "data": "fState" },
					{ "data": "fDestinationName" },
					{ "data": "ftype" },
					{ "data": "fPrice" },
					{ "data": "fStock" },
					{ "data": "fAreaName" },
					{ "data": "fPriority" },
					{
						data: null,
						title: "功能",
						render: function (data, type, row) {
							return '<button id="t1" type="button" class="btn btn-primary btn-sm me-1" data-bs-toggle="modal" data-bs-target="#destionationPartial" onclick="getEditPartial(\'' + row.fDestinationId + '\')"><i class="fa-solid fa-pen-to-square" style="font-size:0.8rem"></i> 編輯</button>' +
								'<button type="button" class="btn btn-danger btn-sm" onclick="changeState (\'' + row.fDestinationId + '\')"><i class="fa-solid fa-trash" style="font-size:0.8rem"></i>上架/下架</button>'
						}
					},
				],
				fixedHeader: { header: true },
				language: {
					url: 'https://cdn.datatables.net/plug-ins/1.13.7/i18n/zh-HANT.json'
				},
				rowCallback: function (row, data) {
					if (data.fState == "上架中") {
						$('td:eq(0)', row).css('background-color', '#00ab5e').css('color', 'white');//綠色
					} else {
						$('td:eq(0)', row).css('background-color', '#ff333a').css('color', 'white'); //紅色
					}
				}
			})
		}

		//新增or編輯景點
		const getEditPartial = async (id) => {
			const response = await fetch(`@Url.Content("~/Employee/TDestination/GetPartial")?id=${id}`);
			const data = await response.text();
			document.getElementById('edit-modal').innerHTML = data;
		}

		//上下架
		const changeState = async (id) => {
			const response = await fetch(`@Url.Content("~/Employee/TDestination/GetTravelPlan")?id=${id}`);
			const data = await response.json();
			const message = data === 0 ? '' : data;
			const head = data === "上架" ? '您確定要上架嗎?' : '您確定要下架嗎？'
			Swal.fire({
				title: head,
				text: message,
				icon: 'warning',
				showCancelButton: true,
				confirmButtonText: 'Yes',
				cancelButtonText: 'No',
			}).then(async (result) => {
				if (result.isConfirmed) {
					const response = await fetch(`@Url.Content("~/Employee/TDestination/Del")?id=${id}`);
					if (response.ok) {
						const data = await response.json();
						if (data === false) {
							Swal.fire({
								title: '上架失敗',
								text: '尚未添加照片',
								icon: 'error',
								confirmButtonText: '確定'
							});
						}
						$('#tbdes').DataTable().ajax.reload();
					}
				}
			});
		}

		//根據傳入的action name呼叫對應的api
		const sendFetchRequest = async (actionName) => {
			//抓取目前的form id
			const formId = document.querySelector("form").getAttribute('id');
			//目前的form id的DOM元素
			const formIdDOM = document.getElementById(`${formId}`)
			//新增form data物件
			const formData = new FormData(formIdDOM);
			//加入要刪除圖片陣列
			for (let i = 0; i < clickedPhotos.length; i++) {
				const byteData = clickedPhotos[i];
				formData.append('photos[]', byteData);
			}
			const btnSave = document.getElementById('btnSave');
			// 禁用按钮
			btnSave.disabled = true;
			//取得防偽標籤
			const token = document.querySelector('input[name="__RequestVerificationToken"]').value;
			try {
				const res = await fetch(`@Url.Content("~/Employee/TDestination/")` + actionName, {
					headers: {
						'RequestVerificationToken': token
					},
					body: formData,
					method: 'POST'
				});
				if (!res.ok) {
					throw new Error(`${res.status}`)
				}
				const data = await res.json();

				if (data.success) {
					//關閉modal
					var myModal = bootstrap.Modal.getInstance(destionationPartial);
					myModal.hide();
					//顯示訊息
					Swal.fire({
						title: "Success",
						text: data.message,
						icon: "success"
					}).then((result) => {
						if (result.isConfirmed) {
							// 在成功提示框显示后执行页面刷新
							// location.reload();
							// 或者刷新datatable
							$('#tbdes').DataTable().ajax.reload();
						}
					});
				} else {
					//依自己的form增加需要驗證的欄位(驗證規則在partial view中)
					const errorDName = document.querySelector(`[data-valmsg-for="FDestinationName"]`);
					const errorPrice = document.querySelector(`[data-valmsg-for="FPrice"]`);
					const errorStock = document.querySelector(`[data-valmsg-for="FStock"]`);
					const errorAddress = document.querySelector(`[data-valmsg-for="FAddress"]`);
					if (errorDName) {
						errorDName.textContent = data.errors.FDestinationName[0];
					}
					if (errorPrice) {
						errorPrice.textContent = data.errors.FPrice[0];
					}
					if (errorStock) {
						errorStock.textContent = data.errors.FStock[0];
					}
					if (errorAddress) {
						errorAddress.textContent = data.errors.FAddress[0];
					}
				}
			} catch (error) {
				Swal.fire({
					title: "error",
					text: error.message,
					icon: "error"
				});
			}
		};

		//取得要刪除的圖片
		var clickedPhotos = [];
		function imagebeClick(photoData, imageid) {
			Swal.fire({
				title: '確定要刪除圖片嗎?',
				text: '',
				icon: 'warning',
				showCancelButton: true,
				confirmButtonText: 'Yes',
				cancelButtonText: 'No',
			}).then(async (result) => {
				if (result.isConfirmed) {
					imageid.style.display = 'none';
					clickedPhotos.push(photoData);
				}
			});

		};

		//讀取要加入的圖片
		function readimg(input) {
			document.querySelector("#imgCreate").innerHTML = ""
			for (i = 0; i < input.files.length; i++) {
				if (input.files && input.files[i]) {
					var reader = new FileReader();
					reader.onload = function (e) {
						var img = document.createElement("img")
						img.src = e.target.result;
						img.setAttribute("style", "width:150px;height:100px;object-fit:cover;margin-right:10px;margin-bottom:10px;")
						document.querySelector("#imgCreate").appendChild(img)
					}
					reader.readAsDataURL(input.files[i]);
				}
			}
		};

		$(document).ready(() => {
			loadDestionation();
			$('#tbdes tbody').on('click', 'tr', function () {
				var data = $(this).closest('table').DataTable().row(this).data();
				var fDestinationid = data.fDestinationId;
				//景點圖片
				const imgurl = `@Url.Content("~/api/TApi/ShowPic")?id=${fDestinationid}`;
				fetch(imgurl)
					.then(response => response.json())
					.then(data => {
						const destinationImg = document.getElementById('destionationimg');
						destinationImg.innerHTML = '';
						data.forEach(base64String => {
							const img = document.createElement('img');
							img.src = 'data:image/jpeg;base64,' + base64String;
							img.width = 200;
							img.height = 150;
							img.style.paddingRight = '10px';
							destinationImg.appendChild(img);
						});
					})
					.catch(error => {
						console.error('Error fetching image:', error);
					});

				//景點敘述
				const url = '@Url.Content("~/api/TApi/GetAllDestionation")';
				fetch(url)
					.then(response => response.json())
					.then(data => {
						const matchingData = data.find(item => item.fDestinationId === fDestinationid);
						if (matchingData) {
							const fDestinationContent = matchingData.fDestinationContent;
							const context = document.getElementById("destionationcontext");
							context.innerHTML = fDestinationContent;
						} else {
							console.log("未找到 fDestinationId 等於 " + fDestinationid + " 的資料");
						}
					})
					.catch(error => {
						console.error('Error:', error);
					});
				document.getElementById("myHeading").tabIndex = 999;
				document.getElementById("myHeading").focus();

			});
			$('#tbdes tbody').on('mouseenter', 'tr', function () {
				$(this).addClass('hover-highlight');
			});
			$('#tbdes tbody').on('mouseleave', 'tr', function () {
				$(this).removeClass('hover-highlight');
			});

			//匯入資料
			$("#btnSave").click(async function () {
				var fileUpload = $("#uploadBtn").get(0);
				var files = fileUpload.files;
				if (files.length > 0) {
					var fileData = new FormData();
					for (var i = 0; i < files.length; i++) {
						fileData.append("file", files[i]);
					}
					try {
						const response = await fetch('/Employee/TDestination/UploadUserList', {
							method: 'POST',
							body: fileData
						});
						if (!response.ok) {
							throw new Error('Network response was not ok');
						}
						const result = await response.text();
						$('#tbdes').DataTable().ajax.reload();
					} catch (error) {
						alert('Error: ' + error.message);
					}
				} else {
					Swal.fire({
						title: '請先上傳檔案',
						text: '',
						icon: 'warning'
					});
				}
			});
		});
	</script>
}